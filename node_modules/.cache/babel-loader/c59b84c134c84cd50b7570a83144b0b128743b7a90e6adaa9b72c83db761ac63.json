{"ast":null,"code":"var _jsxFileName = \"/Users/rojabkhan/Projects/package/audio-player-package/player-app/src/AudioPlayer/ProgressBar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  progressBarRef,\n  audioRef,\n  timeProgress,\n  duration\n}) => {\n  const handleProgressChange = () => {\n    if (progressBarRef.current) {\n      audioRef.current.currentTime = progressBarRef.current.value;\n    }\n  };\n  const formatTime = time => {\n    if (time && !isNaN(time)) {\n      const minutes = Math.floor(time / 60);\n      const formatMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\n      const seconds = Math.floor(time % 60);\n      const formatSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\n      return `${formatMinutes}:${formatSeconds}`;\n    }\n    return '00:00';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      ref: progressBarRef,\n      defaultValue: \"0\",\n      onChange: handleProgressChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"time\",\n      children: formatTime(timeProgress)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), \"/\", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"time\",\n      children: formatTime(duration)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 70\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["ProgressBar","progressBarRef","audioRef","timeProgress","duration","handleProgressChange","current","currentTime","value","formatTime","time","isNaN","minutes","Math","floor","formatMinutes","seconds","formatSeconds","_jsxDEV","className","children","type","ref","defaultValue","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rojabkhan/Projects/package/audio-player-package/player-app/src/AudioPlayer/ProgressBar.js"],"sourcesContent":["const ProgressBar = ({progressBarRef, audioRef, timeProgress, duration}) => {\n    const handleProgressChange = () => {\n      if(progressBarRef.current) {\n        audioRef.current.currentTime = progressBarRef.current.value;\n\n      }\n    };\n\n    const formatTime = (time) => {\n        if (time && !isNaN(time)) {\n          const minutes = Math.floor(time / 60);\n          const formatMinutes =\n            minutes < 10 ? `0${minutes}` : `${minutes}`;\n          const seconds = Math.floor(time % 60);\n          const formatSeconds =\n            seconds < 10 ? `0${seconds}` : `${seconds}`;\n          return `${formatMinutes}:${formatSeconds}`;\n        }\n        return '00:00';\n      };\n    \n    return (\n        <div className=\"progress\">\n            <input\n                type=\"range\"\n                ref={progressBarRef}\n                defaultValue=\"0\"\n                onChange={handleProgressChange}\n            />\n            <span className=\"time\">{formatTime(timeProgress)}</span>/<span className=\"time\">{formatTime(duration)}</span>\n        </div>\n    )\n  };\n  export default ProgressBar;"],"mappings":";;AAAA,MAAMA,WAAW,GAAGA,CAAC;EAACC,cAAc;EAAEC,QAAQ;EAAEC,YAAY;EAAEC;AAAQ,CAAC,KAAK;EACxE,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAGJ,cAAc,CAACK,OAAO,EAAE;MACzBJ,QAAQ,CAACI,OAAO,CAACC,WAAW,GAAGN,cAAc,CAACK,OAAO,CAACE,KAAK;IAE7D;EACF,CAAC;EAED,MAAMC,UAAU,GAAIC,IAAI,IAAK;IACzB,IAAIA,IAAI,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC,EAAE;MACxB,MAAME,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACJ,IAAI,GAAG,EAAE,CAAC;MACrC,MAAMK,aAAa,GACjBH,OAAO,GAAG,EAAE,GAAG,IAAIA,OAAO,EAAE,GAAG,GAAGA,OAAO,EAAE;MAC7C,MAAMI,OAAO,GAAGH,IAAI,CAACC,KAAK,CAACJ,IAAI,GAAG,EAAE,CAAC;MACrC,MAAMO,aAAa,GACjBD,OAAO,GAAG,EAAE,GAAG,IAAIA,OAAO,EAAE,GAAG,GAAGA,OAAO,EAAE;MAC7C,OAAO,GAAGD,aAAa,IAAIE,aAAa,EAAE;IAC5C;IACA,OAAO,OAAO;EAChB,CAAC;EAEH,oBACIC,OAAA;IAAKC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBF,OAAA;MACIG,IAAI,EAAC,OAAO;MACZC,GAAG,EAAErB,cAAe;MACpBsB,YAAY,EAAC,GAAG;MAChBC,QAAQ,EAAEnB;IAAqB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFV,OAAA;MAAMC,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEX,UAAU,CAACN,YAAY;IAAC;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,KAAC,eAAAV,OAAA;MAAMC,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEX,UAAU,CAACL,QAAQ;IAAC;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5G,CAAC;AAEZ,CAAC;AAACC,EAAA,GAhCE7B,WAAW;AAiCf,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}