{"ast":null,"code":"var _jsxFileName = \"/Users/rojabkhan/Projects/package/audio-player-package/player-app/src/AudioPlayer/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport Controls from \"./Controls\";\nimport DisplayTrack from \"./DisplayTrack\";\nimport ProgressBar from \"./ProgressBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  displayTrack,\n  progressBar,\n  tracks,\n  controls\n}) => {\n  _s();\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [currentTrack, setCurrentTrack] = useState(tracks[currentTrackIndex]);\n  const [timeProgress, setTimeProgress] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const audioRef = useRef();\n  const progressBarRef = useRef();\n  const handleNextTrack = () => {\n    const nextTrackIndex = currentTrackIndex + 1;\n    if (nextTrackIndex < tracks.length) {\n      setCurrentTrackIndex(nextTrackIndex);\n      setCurrentTrack(tracks[nextTrackIndex]);\n    }\n  };\n  const handlePreviousTrack = () => {\n    const prevTrackIndex = currentTrackIndex - 1;\n    if (prevTrackIndex < tracks.length) {\n      setCurrentTrackIndex(prevTrackIndex);\n      setCurrentTrack(tracks[prevTrackIndex]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: [/*#__PURE__*/_jsxDEV(DisplayTrack, {\n        currentTrack,\n        audioRef,\n        setDuration,\n        progressBarRef,\n        displayTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        audioRef,\n        progressBarRef,\n        duration,\n        setTimeProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), progressBar && /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progressBarRef,\n        audioRef,\n        timeProgress,\n        duration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), controls && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousTrack,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextTrack,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"dgx+lKSaMaM1Jy9RchsgEgD8fME=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["useState","useRef","Controls","DisplayTrack","ProgressBar","jsxDEV","_jsxDEV","AudioPlayer","displayTrack","progressBar","tracks","controls","_s","currentTrackIndex","setCurrentTrackIndex","currentTrack","setCurrentTrack","timeProgress","setTimeProgress","duration","setDuration","audioRef","progressBarRef","handleNextTrack","nextTrackIndex","length","handlePreviousTrack","prevTrackIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/rojabkhan/Projects/package/audio-player-package/player-app/src/AudioPlayer/AudioPlayer.js"],"sourcesContent":["import { useState, useRef } from \"react\";\n\nimport Controls from \"./Controls\";\nimport DisplayTrack from \"./DisplayTrack\";\nimport ProgressBar from \"./ProgressBar\";\n\nconst AudioPlayer = ({ displayTrack, progressBar, tracks, controls }) => {\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [currentTrack, setCurrentTrack] = useState(tracks[currentTrackIndex]);\n\n  const [timeProgress, setTimeProgress] = useState(0);\n  const [duration, setDuration] = useState(0);\n\n  const audioRef = useRef();\n  const progressBarRef = useRef();\n\n  const handleNextTrack = () => {\n    const nextTrackIndex = currentTrackIndex + 1;\n    if (nextTrackIndex < tracks.length) {\n      setCurrentTrackIndex(nextTrackIndex);\n      setCurrentTrack(tracks[nextTrackIndex]);\n    }\n  };\n\n  const handlePreviousTrack = () => {\n    const prevTrackIndex = currentTrackIndex - 1;\n    if (prevTrackIndex < tracks.length) {\n      setCurrentTrackIndex(prevTrackIndex);\n      setCurrentTrack(tracks[prevTrackIndex]);\n    }\n  };\n\n  return (\n    <div className=\"audio-player\">\n      <div className=\"inner\">\n        <DisplayTrack\n          {...{\n            currentTrack,\n            audioRef,\n            setDuration,\n            progressBarRef,\n            displayTrack,\n          }}\n        />\n        <Controls\n          {...{ audioRef, progressBarRef, duration, setTimeProgress }}\n        />\n        {progressBar && (\n          <ProgressBar\n            {...{ progressBarRef, audioRef, timeProgress, duration }}\n          />\n        )}\n      </div>\n\n      {controls && (\n        <div className=\"controls\">\n          <button onClick={handlePreviousTrack}>Previous</button>\n          <button onClick={handleNextTrack}>Next</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}