{"ast":null,"code":"var _jsxFileName = \"/Users/rojabkhan/Projects/package/audio-player-package/player-app/src/AudioPlayer/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport PlayBtn from \"./PlayBtn\";\nimport Track from \"./Track\";\nimport ProgressBar from \"./ProgressBar\";\nimport TimeTrack from \"./TimeTrack\";\nimport Navigator from \"./Navigator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  trackTitle,\n  progressBar,\n  tracks,\n  navigator,\n  timeTrack,\n  cover,\n  playButton,\n  pauseButton,\n  navigationButton\n}) => {\n  _s();\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [currentTrack, setCurrentTrack] = useState(tracks[currentTrackIndex]);\n  const [timeProgress, setTimeProgress] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const audioRef = useRef();\n  const progressBarRef = useRef();\n  const handleNextTrack = () => {\n    const nextTrackIndex = currentTrackIndex + 1;\n    if (nextTrackIndex < tracks.length) {\n      setCurrentTrackIndex(nextTrackIndex);\n      setCurrentTrack(tracks[nextTrackIndex]);\n    }\n  };\n  const handlePreviousTrack = () => {\n    const prevTrackIndex = currentTrackIndex - 1;\n    if (prevTrackIndex < tracks.length && prevTrackIndex >= 0) {\n      setCurrentTrackIndex(prevTrackIndex);\n      setCurrentTrack(tracks[prevTrackIndex]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ra-player\",\n    children: [/*#__PURE__*/_jsxDEV(Track, {\n      currentTrack,\n      audioRef,\n      setDuration,\n      progressBarRef,\n      trackTitle,\n      cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), progressBar && /*#__PURE__*/_jsxDEV(ProgressBar, {\n      progressBarRef,\n      audioRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(PlayBtn, {\n      audioRef,\n      progressBarRef,\n      timeProgress,\n      duration,\n      setTimeProgress,\n      handleNextTrack,\n      playButton,\n      pauseButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), navigator && /*#__PURE__*/_jsxDEV(Navigator, {\n      prev: handlePreviousTrack,\n      next: handleNextTrack,\n      navigationButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), timeTrack && /*#__PURE__*/_jsxDEV(TimeTrack, {\n      timeProgress,\n      duration,\n      setTimeProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"dgx+lKSaMaM1Jy9RchsgEgD8fME=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useRef","PlayBtn","Track","ProgressBar","TimeTrack","Navigator","jsxDEV","_jsxDEV","AudioPlayer","trackTitle","progressBar","tracks","navigator","timeTrack","cover","playButton","pauseButton","navigationButton","_s","currentTrackIndex","setCurrentTrackIndex","currentTrack","setCurrentTrack","timeProgress","setTimeProgress","duration","setDuration","audioRef","progressBarRef","handleNextTrack","nextTrackIndex","length","handlePreviousTrack","prevTrackIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","prev","next","_c","$RefreshReg$"],"sources":["/Users/rojabkhan/Projects/package/audio-player-package/player-app/src/AudioPlayer/AudioPlayer.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\nimport PlayBtn from \"./PlayBtn\";\nimport Track from \"./Track\";\nimport ProgressBar from \"./ProgressBar\";\nimport TimeTrack from \"./TimeTrack\";\nimport Navigator from \"./Navigator\";\n\nconst AudioPlayer = ({\n  trackTitle,\n  progressBar,\n  tracks,\n  navigator,\n  timeTrack,\n  cover,\n  playButton,\n  pauseButton,\n  navigationButton,\n}) => {\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [currentTrack, setCurrentTrack] = useState(tracks[currentTrackIndex]);\n\n  const [timeProgress, setTimeProgress] = useState(0);\n  const [duration, setDuration] = useState(0);\n\n  const audioRef = useRef();\n  const progressBarRef = useRef();\n\n  const handleNextTrack = () => {\n    const nextTrackIndex = currentTrackIndex + 1;\n    if (nextTrackIndex < tracks.length) {\n      setCurrentTrackIndex(nextTrackIndex);\n      setCurrentTrack(tracks[nextTrackIndex]);\n    }\n  };\n\n  const handlePreviousTrack = () => {\n    const prevTrackIndex = currentTrackIndex - 1;\n    if (prevTrackIndex < tracks.length && prevTrackIndex >= 0) {\n      setCurrentTrackIndex(prevTrackIndex);\n      setCurrentTrack(tracks[prevTrackIndex]);\n    }\n  };\n\n  return (\n    <div className=\"ra-player\">\n      <Track\n        {...{\n          currentTrack,\n          audioRef,\n          setDuration,\n          progressBarRef,\n          trackTitle,\n          cover,\n        }}\n      />\n      {progressBar && <ProgressBar {...{ progressBarRef, audioRef }} />}\n\n      <PlayBtn\n        {...{\n          audioRef,\n          progressBarRef,\n          timeProgress,\n          duration,\n          setTimeProgress,\n          handleNextTrack,\n          playButton,\n          pauseButton,\n        }}\n      />\n\n      {navigator && (\n        <Navigator\n          {...{\n            prev: handlePreviousTrack,\n            next: handleNextTrack,\n            navigationButton,\n          }}\n        />\n      )}\n\n      {timeTrack && (\n        <TimeTrack {...{ timeProgress, duration, setTimeProgress }} />\n      )}\n    </div>\n  );\n};\n\nexport default AudioPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}